- if @packed_items.none?
  %h5.text-center No existing packed items. Use the tabs to search or create a new item.
- else
  %h5 Update or remove existing staged items.
  = render partial: "layouts/list_quick_filter", locals: {placeholder: "Filter by name or ID...", assoc: "manage-items"}
  - @packed_items.each do |pi|
    = form_for pi, url: packed_item_path(pi) do |f|
      .row.inline-add-item
        .col-xs-12.manage-item-name{data: {unit_weight: pi.item.unit_weight.to_i, item_id: pi.item.id}}
          %p
            = pi.generated_name
            - if pi.show_id
              â€”
              %em.show-id ID: ##{pi.id}
          .drawer-info
            - unless pi.expiry_date.nil?
              %span.label.label-warning= pi.expiry_date.strftime("%Y-%m-%d")
            - unless pi.weight.to_f.zero?
              %span.label.label-primary #{pi.weight}kg
            %span.label.label-success= pi.quantity
            %i.fa.fa-ellipsis-v
        .col-xs-12.manage-item-form.hidden
          .row
            .col-xs-6.col-sm-4
              .form-group
                = f.label :quantity
                = f.number_field :quantity, value: pi.quantity, class: "form-control", min: 1, id: "quantity-#{pi.id}"
                = f.hidden_field :staged, value: true, id: "stage-flag-#{pi.id}"
            .col-xs-6.col-sm-4
              .form-group
                = f.label "Weight (kg)"
                = f.number_field :weight, step: :any, class: "form-control", id: "weight-#{pi.id}"
            .col-xs-6.col-sm-4
              .form-group
                = f.label :expires
                = f.text_field :expiry_date, value: pi.expiry_date&.strftime("%Y-%m-%d"), class: "form-control datepickers", id: "expiry-#{pi.id}", placeholder: "YYYY-MM-DD"
            .col-xs-6.col-sm-4
              .form-group.staging-assignments{data: {id: pi.id}}
                %label Assign to...
                = select_tag("", options_for_select(["Staging", "Box", "Pallet", "Container"], "Staging"), { class: "form-control", id: "staging-assignment-#{pi.id}" })
            .col-xs-6.col-sm-4
              .form-group.hidden{id: "box-assignment-form-#{pi.id}"}
                = f.label :box_id, "Box Name"
                = f.select :box_id, options_from_collection_for_select(@boxes, :id, :name), { include_blank: "None" }, { class: "form-control", id: "box-assignment-input-#{pi.id}" }
              .form-group.hidden{id: "pallet-assignment-form-#{pi.id}"}
                = f.label :pallet_id, "Pallet Name"
                = f.select :pallet_id, options_from_collection_for_select(@pallets, :id, :name), { include_blank: "None" }, { class: "form-control", id: "pallet-assignment-input-#{pi.id}" }
              .form-group.hidden{id: "container-assignment-form-#{pi.id}"}
                = f.label :container_id, "Container Name"
                = f.select :container_id, options_from_collection_for_select(@containers, :id, :name), { include_blank: "None" }, { class: "form-control", id: "container-assignment-input-#{pi.id}" }
            .col-xs-12
              .pull-left.padding-top-small
                %label Generate ID?
                = f.check_box :show_id
              .btn-toolbar.list-toolbar
                = submit_button_responsive("Update", "pull-right")
                = delete_button(packed_item_path(pi), "Are you sure you want to delete #{pi.generated_name}?", "pull-right")

= paginate @packed_items, window: 2
